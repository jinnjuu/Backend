# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # sed -i "s/\${http.port}/$HTTP_PORT/g" server.xml
#     - name: Make application.properties
#       run: |
#         cd ./src/main/resources
#         sed -i "s/$DATASOURCE_URL/${{ secrets.DATASOURCE_URL }}/g" > ./application.properties
#         sed -i "s/$DATASOURCE_USERNAME/${{ secrets.DATASOURCE_USERNAME }}/g" > ./application.properties
#         sed -i "s/$DATASOURCE_PASSWORD/${{ secrets.DATASOURCE_PASSWORD }}/g" > ./application.properties
#         sed -i "s/$MAIL_USERNAME/${{ secrets.MAIL_USERNAME }}/g" > ./application.properties
#         sed -i "s/$MAIL_PASSWORD/${{ secrets.MAIL_PASSWORD }}/g" > ./application.properties
#         cat ./application.properties
#         shell: bash

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build -x test
        
    - name: Upload artifact for build
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: build/libs/backend-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2

     - name: Download artifact for build
       uses: actions/download-artifact@v3
       with:
         name: my-artifact
    
     - name: Display structure of downloaded files
       run: ls -R

     - uses: actions/checkout@master
     - name: copy file via ssh
       uses: appleboy/scp-action@master
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         password: ${{ secrets.PASSWORD }}
         port: ${{ secrets.PORT }}
         source: "my-artifact/backend-0.0.1-SNAPSHOT.jar"
         target: "~/Backend/"

     - name: executing springboot via remote ssh commands
       uses: appleboy/ssh-action@master
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         password: ${{ secrets.PASSWORD }}
         port: ${{ secrets.PORT }}
         script: java â€“jar ~/Backend/backend-0.0.1-SNAPSHOT.jar &
